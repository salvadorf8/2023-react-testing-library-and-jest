[{"content":"import { screen, render, within } from '@testing-library/react';\r\n\r\nfunction FormData() {\r\n  return (\r\n    <div>\r\n    <button>Go Back</button>\r\n    <form aria-label='form'>\r\n      <button>Save</button>\r\n      <button>Cancel</button>\r\n    </form>\r\n    </div>\r\n  )\r\n};\r\n\r\nrender(<FormData />);","type":"code","id":"87nuq"},{"content":"const toContainRole = (container, role, quantity = 1) => {\r\n  // goal is to return a pass: true | false, if false include message: () => ''\r\n  const elements = within(container).queryAllByRole(role);\r\n\r\n  if(elements.length === quantity) {\r\n    return {\r\n      pass: true\r\n    }\r\n  }\r\n\r\n  return {\r\n    pass: false,\r\n    message: () => `Expected to find ${quantity} ${role} elements.  Found ${elements.length} instead`\r\n  }\r\n}\r\n\r\n// expect understands a new matcher is available\r\nexpect.extend({ toContainRole });","type":"code","id":"in5co"},{"content":"test('the form displays two buttons', () => {\r\n  render(<FormData />);\r\n\r\n  const form = screen.getByRole('form');\r\n\r\n  // const buttons = within(form).getAllByRole('button');\r\n  // expect(buttons).toHaveLength(2);\r\n\r\n  expect(form).toContainRole('button', 2)\r\n\r\n})","type":"code","id":"5cnif"}]